<!DOCTYPE html>
<html>
<head>
    <title>Draw on Page</title>
    <style>
        #canvas {
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <canvas id="canvas" width="500" height="500"></canvas>

    <script src="script.js"></script>
</body>
</html>



// Get the canvas element
const canvas = document.getElementById("canvas");

// Set up the drawing context
const context = canvas.getContext("2d");
context.lineWidth = 2;
context.strokeStyle = "black";

// Variables to store the current position
let isDrawing = false;
let lastX = 0;
let lastY = 0;

// Event listeners for mouse actions
canvas.addEventListener("mousedown", startDrawing);
canvas.addEventListener("mousemove", draw);
canvas.addEventListener("mouseup", stopDrawing);
canvas.addEventListener("mouseout", stopDrawing);

// Function to start drawing
function startDrawing(e) {
	isDrawing = true;
	[lastX, lastY] = [e.offsetX, e.offsetY];
}

// Function to draw
function draw(e) {
	if (!isDrawing) return;

	context.beginPath();
	context.moveTo(lastX, lastY);
	context.lineTo(e.offsetX, e.offsetY);
	context.stroke();

	[lastX, lastY] = [e.offsetX, e.offsetY];
}

// Function to stop drawing
function stopDrawing() {
	isDrawing = false;
}



This code sets up an HTML page with a canvas element and includes the necessary JavaScript 
code to handle mouse events for drawing. When the mouse is pressed down on the canvas, 
the startDrawing function is called, and as the mouse moves (mousemove event), the draw 
function is called to draw lines on the canvas. When the mouse is released (mouseup event) 
or moves out of the canvas (mouseout event), the stopDrawing function is called to stop drawing.

You can save the HTML and JavaScript code in separate files (e.g., index.html and script.js)
in the same directory and open the HTML file in a web browser to see the drawing functionality in action.
